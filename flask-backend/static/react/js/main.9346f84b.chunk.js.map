{"version":3,"sources":["actions/index.js","reducers/reduce_main.js","actions/action_canvas.js","reducers/reduce_canvas.js","actions/action_unredo.js","reducers/reduce_unredo.js","actions/action_inpainting.js","actions/action_kbevents.js","reducers/reduce_kbevents.js","reducers/index.js","store.js","components/uploader.jsx","components/canvas.jsx","containers/canvas.js","components/kb_events.jsx","containers/kb_events.js","components/inpainting_toolbar.jsx","containers/inpainting_toolbar.js","components/main.jsx","containers/main.js","App.js","serviceWorker.js","index.js"],"names":["setInputProcessing","status","dispatch","type","setOutputProcessing","saveOutputFile","file","reader","FileReader","readAsDataURL","onload","e","target","result","resetImage","getState","_getState$canvas","canvas","canvasWidth","canvasHeight","getContext","clearRect","pickNewImage","updateInputColWidth","value","downloadOutputImage","outputImageFile","main","a","document","createElement","download","Date","toISOString","slice","replace","href","click","showCloseModal","showModal","initialState","inputProcessing","outputProcessing","inputImageFile","canvasSize","inputColWidth","constTotalCols","constExpandedCols","activeHotkeys","reducerMain","state","arguments","length","undefined","action","Object","objectSpread","size","updateBrushSize","pushLineArray","line","canvasBrushSize","canvasBrushColor","linesArray","futureLinesArray","reducerCanvas","width","height","color","concat","toConsumableArray","index","startLinesLen","updateChunkIdx","redrawCanvas","ctx","forEach","idx","strokeStyle","lineWidth","lineCap","beginPath","moveTo","startX","startY","lineTo","endX","endY","stroke","undo","_getState$unredo","unredo","chunkIdx","linesArrayIdx","linesArrayChunk","linesArrayTail","redo","_getState$canvas2","_getState$unredo2","futureLinesArrayIdx","futureLinesArrayHead","isMouseDown","reducerClick","isDown","chunk","fetchData","_ref","asyncToGenerator","regenerator_default","mark","_callee","img","mask","formData","wrap","_context","prev","next","FormData","append","fetch","method","body","abrupt","sent","stop","_x","_x2","apply","this","performInpainting","_ref2","_callee2","_getState$main","res","resBlob","_context2","toastr","info","toDataURL","catch","error","blob","_x3","_x4","hotkeys","d","s","key","ctrlKey","_s$unredo","reducerKbevents","filter","x","combineReducers","reducer_main","reducer_canvas","reducer_unredo","kbevents","reducer_kbevents","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","ImageUploader","onDrop","acceptedFiles","_this","props","saveInputFile","react_default","className","Segment","loader","dist_es","style","accept","maxSize","multiple","onDropRejected","getRootProps","getInputProps","Icon","name","fontSize","Component","CanvasDraw","getMousePos","rect","getBoundingClientRect","displayScale","clientX","clientY","touches","left","y","top","drawLine","drawStart","clearFutureLineArray","sliceLinesChunk","_this$getMousePos","draw","_this$getMousePos2","newX","newY","_this2","Image","src","w","h","updateCanvasDimensions","_this3","display","background","backgroundSize","touchAction","ref","setCanvas","onMouseDown","onClick","onMouseEnter","onMouseMove","onTouchStart","onTouchMove","sizeMe","connect","updateBrushColor","Hotkey","includes","addActiveHotkey","removeActiveHotkey","children","Kbevents","styles","activated","jumped","thumb","backgroundColor","&:hover","boxShadow","fade","&$activated","&$jumped","track","ToolbarInpainting","onSliderChange","v","classes","textAlign","Slider_default","min","max","step","onChange","Label","containers_kb_events","Button","content","withStyles","Main","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleBtn","setState","prevState","toggleIOimg","onSize","updateCanvasSize","btn","args","hiddenName","iconName","Content","visible","hidden","moveButton","floatRight","resultWidth","direction","addSpace","compact","basic","floated","grid","inlineView","view","label","floatPos","Grid","Column","raised","as","ribbon","map","obj","i","float","child","React","createRef","addEventListener","handleKeyDown","handleMouseClick","removeEventListener","myInputDimmer","Dimmer","active","Loader","myOutputDimmer","totalCols","expandedCol","inputWidth","outputWidth","hideInputBtn","hideOutputBtn","inBtnDefaults","animated","preventDefault","undoBtn","disabled","redoBtn","resetBtn","resetModal","Modal","open","onClose","trigger","closeIcon","Header","icon","Actions","panes","menuItem","render","Tab","Pane","containers_inpainting_toolbar","assign","canvasScreen","containers_canvas","uploaderScreen","uploader","downloadBtn","minWidth","resultScreen","alt","waitScreen","htmlFor","marginTop","Responsive","stackable","columns","defaults","inputView","wait","outputView","inputImageSrc","outputImageSrc","event","_getState$unredo3","hotkey","App","es","containers_main","Boolean","window","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"js/main.9346f84b.chunk.js","sourcesContent":["export const INPUT_PROCESSING = 'INPUT_PROCESSING'\nexport const OUTPUT_PROCESSING = 'OUTPUT_PROCESSING'\nexport const INPUT_SAVEFILE = 'INPUT_SAVEFILE'\nexport const OUTPUT_SAVEFILE = 'OUTPUT_SAVEFILE'\nexport const RESET_IMG = 'RESET_IMG'\nexport const PICK_NEW_IMG = 'PICK_NEW_IMG'\nexport const CANVAS_UPDATE_SIZE = 'CANVAS_UPDATE_SIZE'\nexport const INPUT_COLUMN_WIDTH = 'INPUT_COLUMN_WIDTH'\nexport const SHOW_CLOSE_MODAL = 'SHOW_CLOSE_MODAL'\n\nexport const setInputProcessing = status => dispatch => {\n  dispatch({\n    type: INPUT_PROCESSING,\n    status: status\n  })\n}\n\nexport const setOutputProcessing = status => dispatch => {\n  dispatch({\n    type: OUTPUT_PROCESSING,\n    status: status\n  })\n}\n\nexport const saveInputFile = file => dispatch => {\n  dispatch(setInputProcessing(true))\n\n  let reader = new FileReader()\n  reader.readAsDataURL(file)\n  reader.onload = e => {\n    dispatch({\n      type: INPUT_SAVEFILE,\n      file: e.target.result\n    })\n  }\n}\n\nexport const saveOutputFile = file => dispatch => {\n  dispatch(setOutputProcessing(true))\n\n  let reader = new FileReader()\n  reader.readAsDataURL(file)\n  reader.onload = e => {\n    dispatch({\n      type: OUTPUT_SAVEFILE,\n      file: e.target.result\n    })\n  }\n}\n\nexport const resetImage = () => (dispatch, getState) => {\n  const { canvas, canvasWidth, canvasHeight } = getState().canvas\n  const ctx = canvas.getContext('2d')\n  ctx.clearRect(0, 0, canvasWidth, canvasHeight)\n\n  dispatch({\n    type: RESET_IMG\n  })\n}\n\nexport const pickNewImage = () => dispatch => {\n  dispatch({\n    type: PICK_NEW_IMG\n  })\n}\n\nexport const updateCanvasSize = size => dispatch => {\n  dispatch({\n    type: CANVAS_UPDATE_SIZE,\n    size: size\n  })\n}\n\nexport const updateInputColWidth = value => dispatch => {\n  dispatch({\n    type: INPUT_COLUMN_WIDTH,\n    value: value\n  })\n}\n\nexport const downloadOutputImage = () => (dispatch, getState) => {\n  const { outputImageFile } = getState().main\n\n  let a = document.createElement('a')\n  a.download = new Date().toISOString().slice(0, 19).replace('T', '_') + '.png'\n  a.href = outputImageFile\n  a.click()\n}\n\nexport const showCloseModal = showModal => dispatch => {\n  dispatch({\n    type: SHOW_CLOSE_MODAL,\n    showModal: showModal\n  })\n}","import {\n  INPUT_PROCESSING,\n  OUTPUT_PROCESSING,\n  INPUT_SAVEFILE,\n  OUTPUT_SAVEFILE,\n  PICK_NEW_IMG,\n  CANVAS_UPDATE_SIZE,\n  INPUT_COLUMN_WIDTH,\n  SHOW_CLOSE_MODAL\n} from '../actions'\n\nconst initialState = {\n  inputProcessing: null,\n  outputProcessing: null,\n  inputImageFile: null,\n  outputImageFile: null,\n  canvasSize: 10,\n  inputColWidth: 13,\n  constTotalCols: 16,\n  constExpandedCols: 13,\n  activeHotkeys: [],\n  showModal: false\n}\n\nconst reducerMain = (state = initialState, action) => {\n  switch (action.type) {\n    case INPUT_PROCESSING:\n      return {\n        ...state,\n        inputProcessing: action.status\n      }\n    case OUTPUT_PROCESSING:\n      return {\n        ...state,\n        outputProcessing: action.status\n      }\n    case INPUT_SAVEFILE:\n      return {\n        ...state,\n        inputImageFile: action.file\n      }\n    case OUTPUT_SAVEFILE:\n      return {\n        ...state,\n        outputImageFile: action.file\n      }\n    case PICK_NEW_IMG:\n      return {\n        ...state,\n        inputImageFile: null,\n        outputImageFile: null,\n        inputProcessing: null,\n        outputProcessing: null\n      }\n    case CANVAS_UPDATE_SIZE:\n      return {\n        ...state,\n        canvasSize: action.size\n      }\n    case INPUT_COLUMN_WIDTH:\n      return {\n        ...state,\n        inputColWidth: action.value\n      }\n    case SHOW_CLOSE_MODAL:\n      return {\n        ...state,\n        showModal: action.showModal\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducerMain","export const CANVAS_UPDATE_INPUT_DIMENSIONS = 'CANVAS_UPDATE_INPUT_DIMENSIONS'\nexport const CANVAS_UPDATE_BRUSHSIZE = 'CANVAS_UPDATE_BRUSHSIZE'\nexport const CANVAS_UPDATE_BRUSHCOLOR = 'CANVAS_UPDATE_BRUSHCOLOR'\nexport const CANVAS_SET_CANVAS = 'CANVAS_SET_CANVAS'\nexport const CANVAS_PUSH_LINEARRAY = 'CANVAS_PUSH_LINEARRAY'\nexport const CANVAS_SLICE_LINEARRAY = 'CANVAS_SLICE_LINEARRAY'\nexport const CANVAS_UNSHIFT_FUTURE_LINEARRAY = 'CANVAS_UNSHIFT_FUTURE_LINEARRAY'\nexport const CANVAS_SLICE_FUTURE_LINEARRAY = 'CANVAS_SLICE_FUTURE_LINEARRAY'\nexport const CANVAS_CLEAR_FUTURE_LINEARRAY = 'CANVAS_CLEAR_FUTURE_LINEARRAY'\n\nexport const updateCanvasDimensions = (width, height) => dispatch => {\n  dispatch({\n    type: CANVAS_UPDATE_INPUT_DIMENSIONS,\n    width: width,\n    height: height\n  })\n}\n\nexport const updateBrushSize = size => dispatch => {\n  dispatch({\n    type: CANVAS_UPDATE_BRUSHSIZE,\n    size: size\n  })\n}\n\nexport const updateBrushColor = color => dispatch => {\n  dispatch({\n    type: CANVAS_UPDATE_BRUSHCOLOR,\n    color: color\n  })\n}\n\nexport const setCanvas = canvas => dispatch => {\n  dispatch({\n    type: CANVAS_SET_CANVAS,\n    canvas: canvas\n  })\n}\n\nexport const pushLineArray = line => dispatch => {\n  dispatch({\n    type: CANVAS_PUSH_LINEARRAY,\n    line: line\n  })\n}\n\nexport const sliceLineArray = index => dispatch => {\n  dispatch({\n    type: CANVAS_SLICE_LINEARRAY,\n    index: index\n  })\n}\n\nexport const unshiftFutureLineArray = line => dispatch => {\n  dispatch({\n    type: CANVAS_UNSHIFT_FUTURE_LINEARRAY,\n    line: line\n  })\n}\n\nexport const sliceFutureLineArray = index => dispatch => {\n  dispatch({\n    type: CANVAS_SLICE_FUTURE_LINEARRAY,\n    index: index\n  })\n}\n\nexport const clearFutureLineArray = () => dispatch => {\n  dispatch({\n    type: CANVAS_CLEAR_FUTURE_LINEARRAY\n  })\n}","import { RESET_IMG, PICK_NEW_IMG } from '../actions'\nimport {\n  CANVAS_UPDATE_INPUT_DIMENSIONS,\n  CANVAS_UPDATE_BRUSHSIZE,\n  CANVAS_UPDATE_BRUSHCOLOR,\n  CANVAS_SET_CANVAS,\n  CANVAS_PUSH_LINEARRAY,\n  CANVAS_SLICE_LINEARRAY,\n  CANVAS_UNSHIFT_FUTURE_LINEARRAY,\n  CANVAS_SLICE_FUTURE_LINEARRAY,\n  CANVAS_CLEAR_FUTURE_LINEARRAY,\n} from '../actions/action_canvas'\n\nconst initialState = {\n  canvasWidth: 100,\n  canvasHeight: 1,\n  canvasBrushSize: 5,\n  canvasBrushColor: '#000000',\n  canvas: null,\n  linesArray: [],\n  futureLinesArray: []\n}\n\nconst reducerCanvas = (state = initialState, action) => {\n  switch (action.type) {\n    case CANVAS_UPDATE_INPUT_DIMENSIONS:\n      return {\n        ...state,\n        canvasWidth: action.width,\n        canvasHeight: action.height\n      }\n    case CANVAS_UPDATE_BRUSHSIZE:\n      return {\n        ...state,\n        canvasBrushSize: action.size\n      }\n    case CANVAS_UPDATE_BRUSHCOLOR:\n      return {\n        ...state,\n        canvasBrushColor: action.color\n      }\n    case CANVAS_SET_CANVAS:\n      return {\n        ...state,\n        canvas: action.canvas\n      }\n    case CANVAS_PUSH_LINEARRAY:\n      return {\n        ...state,\n        linesArray: [...state.linesArray, ...action.line]\n      }\n    case CANVAS_SLICE_LINEARRAY:\n      return {\n        ...state,\n        linesArray: state.linesArray.slice(0, action.index)\n      }\n    case CANVAS_UNSHIFT_FUTURE_LINEARRAY:\n      return {\n        ...state,\n        futureLinesArray: [...action.line, ...state.futureLinesArray]\n      }\n    case CANVAS_SLICE_FUTURE_LINEARRAY:\n      return {\n        ...state,\n        futureLinesArray: state.futureLinesArray.slice(action.index, state.futureLinesArray.length)\n      }\n    case CANVAS_CLEAR_FUTURE_LINEARRAY:\n      return {\n        ...state,\n        futureLinesArray: []\n      }\n    case PICK_NEW_IMG:\n    case RESET_IMG:\n      return {\n        ...state,\n        linesArray: [],\n        futureLinesArray: []\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducerCanvas","import {\n  pushLineArray,\n  sliceLineArray,\n  unshiftFutureLineArray,\n  sliceFutureLineArray\n} from './action_canvas'\nexport const UNREDO_SET_MOUSEDOWN = 'UNREDO_SET_MOUSEDOWN'\nexport const UNREDO_UPDATE_CHUNK_INDEX = 'UNREDO_UPDATE_CHUNK_INDEX'\nexport const UNREDO_PUSH_LINES_CHUNK = 'UNREDO_PUSH_LINES_CHUNK'\nexport const UNREDO_SLICE_LINES_CHUNK = 'UNREDO_SLICE_LINES_CHUNK'\n\nvar startLinesLen = 0\n\nconst setMouseDown = isDown => dispatch => {\n  dispatch({\n    type: UNREDO_SET_MOUSEDOWN,\n    isDown: isDown\n  })\n}\n\nexport const updateChunkIdx = index => dispatch => {\n  dispatch({\n    type: UNREDO_UPDATE_CHUNK_INDEX,\n    index: index\n  })\n}\n\nexport const pushLinesChunk = chunk => dispatch => {\n  dispatch({\n    type: UNREDO_PUSH_LINES_CHUNK,\n    chunk: chunk\n  })\n}\n\nexport const sliceLinesChunk = index => dispatch => {\n  dispatch({\n    type: UNREDO_SLICE_LINES_CHUNK,\n    index: index\n  })\n}\n\nconst redrawCanvas = (ctx, linesArray, canvasWidth, canvasHeight) => {\n  if (!ctx) return\n  ctx.clearRect(0, 0, canvasWidth, canvasHeight)\n\n  linesArray.forEach((line, idx) => {\n    ctx.strokeStyle = line.color\n    ctx.lineWidth = line.size\n    ctx.lineCap = 'round'\n    ctx.beginPath()\n    ctx.moveTo(line.startX, line.startY)\n    ctx.lineTo(line.endX, line.endY)\n    ctx.stroke()\n  })\n}\n\nexport const undo = () => (dispatch, getState) => {\n  const { canvas, linesArray, canvasWidth, canvasHeight } = getState().canvas\n  const { chunkIdx, linesArrayChunk } = getState().unredo\n\n  const linesArrayIdx = linesArrayChunk[chunkIdx - 1]\n  const linesArrayTail = linesArray.slice(linesArrayIdx, linesArray.length)\n\n  dispatch(updateChunkIdx(chunkIdx - 1))\n  dispatch(sliceLineArray(linesArrayIdx))\n  dispatch(unshiftFutureLineArray(linesArrayTail))\n  redrawCanvas(canvas.getContext('2d'), linesArray.slice(0, linesArrayIdx), canvasWidth, canvasHeight)\n}\n\nexport const redo = () => (dispatch, getState) => {\n  const { canvas, linesArray, futureLinesArray, canvasWidth, canvasHeight } = getState().canvas\n  const { chunkIdx, linesArrayChunk } = getState().unredo\n\n  const linesArrayIdx = linesArrayChunk[chunkIdx + 1]\n  const futureLinesArrayIdx = linesArrayIdx - linesArray.length\n  const futureLinesArrayHead = futureLinesArray.slice(0, futureLinesArrayIdx)\n\n  dispatch(updateChunkIdx(chunkIdx + 1))\n  dispatch(sliceFutureLineArray(futureLinesArrayIdx))\n  dispatch(pushLineArray(futureLinesArrayHead))\n  redrawCanvas(canvas.getContext('2d'), linesArray.concat(futureLinesArrayHead), canvasWidth, canvasHeight)\n}\n\nexport const handleMouseClick = event => (dispatch, getState) => {\n  dispatch(setMouseDown(event.type === 'mouseup' ? false : true))\n\n  const { linesArray } = getState().canvas\n  const { chunkIdx, linesArrayChunk } = getState().unredo\n\n  if (event.type === 'mouseup'\n  && startLinesLen !== linesArray.length\n  && chunkIdx === linesArrayChunk.length - 1) {\n    dispatch(updateChunkIdx(chunkIdx + 1))\n    dispatch(pushLinesChunk(linesArray.length))\n  } else if (event.type === 'mousedown') {\n    startLinesLen = linesArray.length\n  }\n}","import { RESET_IMG, PICK_NEW_IMG } from '../actions'\nimport {\n  UNREDO_SET_MOUSEDOWN,\n  UNREDO_UPDATE_CHUNK_INDEX,\n  UNREDO_PUSH_LINES_CHUNK,\n  UNREDO_SLICE_LINES_CHUNK\n} from '../actions/action_unredo'\n\nconst initialState = {\n  isMouseDown: false,\n  chunkIdx: 0,\n  linesArrayChunk: [0]\n}\n\nconst reducerClick = (state = initialState, action) => {\n  switch (action.type) {\n    case UNREDO_SET_MOUSEDOWN:\n      return {\n        ...state,\n        isMouseDown: action.isDown\n      }\n    case UNREDO_UPDATE_CHUNK_INDEX:\n      return {\n        ...state,\n        chunkIdx: action.index\n      }\n    case UNREDO_PUSH_LINES_CHUNK:\n      return {\n        ...state,\n        linesArrayChunk: [...state.linesArrayChunk, action.chunk]\n      }\n    case UNREDO_SLICE_LINES_CHUNK:\n      return {\n        ...state,\n        linesArrayChunk: state.linesArrayChunk.slice(0, action.index)\n      }\n    case (RESET_IMG || PICK_NEW_IMG):\n      return {\n        ...state,\n        chunkIdx: 0,\n        linesArrayChunk: [0]\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducerClick","import {\n  updateInputColWidth,\n  setOutputProcessing,\n  saveOutputFile\n} from './index.js'\nimport { toastr } from 'react-redux-toastr'\n\nconst fetchData = async (img, mask) => {\n  const formData = new FormData()\n  formData.append('image', img)\n  formData.append('mask', mask)\n\n  return await fetch('/upload', {\n    method: 'POST',\n    body: formData\n  })\n}\n\nexport const performInpainting = () => {\n  return async (dispatch, getState) => {\n    const { inputImageFile, constTotalCols } = getState().main\n    const { canvasWidth, canvasHeight, linesArray } = getState().canvas\n\n    dispatch(setOutputProcessing(true))\n    dispatch(updateInputColWidth(constTotalCols / 2))\n    \n    var canvas = document.createElement('canvas')\n    canvas.width = canvasWidth\n    canvas.height = canvasHeight\n\n    var ctx = canvas.getContext('2d')\n    ctx.strokeStyle = '#ffffff'\n    ctx.lineCap = 'round'\n    linesArray.forEach((line, idx) => {\n      ctx.lineWidth = line.size\n      ctx.beginPath()\n      ctx.moveTo(line.startX, line.startY)\n      ctx.lineTo(line.endX, line.endY)\n      ctx.stroke()\n    })\n    \n    // First upload the mask\n    toastr.info('Inpainting', 'Sending inpainting request to server')\n    const res = await fetchData(inputImageFile, canvas.toDataURL()).catch(e => {\n      toastr.error('Inpainting', 'There was an error uploading to the server: ' + e, 1000)\n      dispatch(setOutputProcessing(false))\n    })\n    const resBlob = await res.blob()\n    dispatch(saveOutputFile(resBlob))\n    dispatch(setOutputProcessing(false))\n  }\n}\n","import { performInpainting } from '../actions/action_inpainting'\nimport { undo, redo } from '../actions/action_unredo'\nimport {\n  resetImage,\n  pickNewImage,\n  downloadOutputImage,\n  showCloseModal\n} from '../actions'\n\nexport const ADD_ACTIVE_HOTKEYS = 'ADD_ACTIVE_HOTKEYS'\nexport const REMOVE_ACTIVE_HOTKEYS = 'REMOVE_ACTIVE_HOTKEYS'\n\nconst hotkeys = {\n  downloadOutputImage(e, d, s) {\n    if (e.key !== 'd') return false\n    d(downloadOutputImage())\n    return true\n  },\n  performInpainting(e, d, s) {\n    if (e.key !== 'Enter') return false\n    d(performInpainting())\n    return true\n  },\n  undo(e, d, s) {\n    if (e.key !== 'z' || !e.ctrlKey) return false\n    const { chunkIdx } = s().unredo\n    const disabled = chunkIdx === 0 ? true : false\n    if (disabled) return false\n    d(undo())\n    return true\n  },\n  redo(e, d, s) {\n    if (e.key !== 'y' || !e.ctrlKey) return false\n    const { chunkIdx, linesArrayChunk } = s().unredo\n    const disabled = chunkIdx === linesArrayChunk.length - 1 ? true : false\n    if (disabled) return false\n    d(redo())\n    return true\n  },\n  resetImage(e, d, s) {\n    if (e.key !== 'w') return false\n    d(resetImage())\n    d(showCloseModal(false))\n    return true\n  },\n  pickNewImage(e, d, s) {\n    if (e.key !== 'e') return false\n    d(pickNewImage())\n    d(showCloseModal(false))\n    return true\n  },\n  showCloseModal(e, d, s) {\n    if (e.key !== 'q') return false\n    const { showModal } = s().main\n    d(showCloseModal(!showModal))\n    return true\n  }\n}\n\nexport const addActiveHotkey = value => dispatch => {\n  dispatch({\n    type: ADD_ACTIVE_HOTKEYS,\n    value: value\n  })\n}\n\nexport const removeActiveHotkey = value => dispatch => {\n  dispatch({\n    type: REMOVE_ACTIVE_HOTKEYS,\n    value: value\n  })\n}\n\nexport const handleKeyDown = e => (dispatch, getState) => {\n  const { activeHotkeys } = getState().kbevents\n\n  for (let i = 0; i < activeHotkeys.length; i += 1) {\n    const hotkey = activeHotkeys[i]\n    if (hotkeys[hotkey](e, dispatch, getState)) {\n      e.preventDefault()\n      break\n    }\n  }\n}","import {\n  ADD_ACTIVE_HOTKEYS,\n  REMOVE_ACTIVE_HOTKEYS\n} from '../actions/action_kbevents'\n\nconst initialState = {\n  activeHotkeys: []\n}\n\nconst reducerKbevents = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_ACTIVE_HOTKEYS:\n      return {\n        ...state,\n        activeHotkeys: [...state.activeHotkeys, action.value]\n      }\n    case REMOVE_ACTIVE_HOTKEYS:\n      return {\n        ...state,\n        activeHotkeys: [...state.activeHotkeys.filter(x => x !== action.value)]\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducerKbevents","import { combineReducers } from 'redux'\nimport reducer_main from './reduce_main'\nimport reducer_canvas from './reduce_canvas'\nimport reducer_unredo from './reduce_unredo'\nimport reducer_kbevents from './reduce_kbevents'\n\nexport default combineReducers({\n  main: reducer_main,\n  canvas: reducer_canvas,\n  unredo: reducer_unredo,\n  kbevents: reducer_kbevents\n})","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst initialState = {}\nconst middleware = [thunk]\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n)\nexport default store","import React, { Component } from 'react'\nimport { Icon, Segment } from 'semantic-ui-react'\nimport Dropzone from 'react-dropzone'\nimport { toastr } from 'react-redux-toastr'\n\nclass ImageUploader extends Component {\n  onDrop = acceptedFiles => {\n    if (acceptedFiles.length === 1) {\n      const file = acceptedFiles[0]\n      if (file !== null) {\n        this.props.saveInputFile(file)\n      } else {\n        toastr.error('File error', 'Could not determine which file to upload; for some reason it no longer persists in memory', 500)\n      }\n    } else {\n      toastr.error('File error', 'You may only upload one file at a time', 500)\n    }\n  }\n\n  render() {\n    return (\n      <div className='dropArea'>\n        <Segment>\n          {this.props.loader}\n          <Dropzone\n            style={{ width: '100%' }}\n            accept='image/*'\n            maxSize={1000000000}\n            multiple={false}\n            onDrop={this.onDrop}\n            onDropRejected={() => toastr.error('File error', 'The system currently only supports images in JPEG or PNG, and only below 1GB in size.', 500)}\n          >\n            {({ getRootProps, getInputProps }) => (\n              <div {...getRootProps()}>\n                <input {...getInputProps()} />\n                <Icon name='image' size='huge' /><br />\n                <br />\n                <div style={{ fontSize: '15px' }}><b>Choose a file</b> or drag it here.</div>\n              </div>\n            )}\n          </Dropzone>\n        </Segment>\n      </div>\n    )\n  }\n}\n\nexport default ImageUploader\n","import React, { Component } from 'react'\nimport sizeMe from 'react-sizeme'\n\nclass CanvasDraw extends Component {\n  componentDidMount() {\n    let img = new Image()\n    img.src = this.props.inputImageFile\n    img.onload = () => {\n      const [w, h] = [img.width, img.height]\n      this.props.updateCanvasDimensions(w, h)\n      this.props.linesArray.forEach((line, idx) => {\n        this.drawLine(line)\n      })\n      this.props.setInputProcessing(false)\n    }\n  }\n\n  getMousePos = e => {\n    const rect = this.canvas.getBoundingClientRect()\n\n    let displayScale = this.props.canvasWidth / this.props.canvasSize.width\n\n    // use cursor pos as default\n    let clientX = e.clientX\n    let clientY = e.clientY\n\n    // use first touch if available\n    if (e.touches && e.touches.length > 0) {\n      clientX = e.touches[0].clientX\n      clientY = e.touches[0].clientY\n    }\n\n    // return mouse/touch position inside canvas\n    return {\n      x: (clientX - rect.left) * displayScale,\n      y: (clientY - rect.top) * displayScale\n    }\n  }\n\n  drawLine = (line) => {\n    if (!this.ctx) return\n    this.ctx.strokeStyle = line.color\n    this.ctx.lineWidth = line.size\n    this.ctx.lineCap = 'round'\n    this.ctx.beginPath()\n    this.ctx.moveTo(line.startX, line.startY)\n    this.ctx.lineTo(line.endX, line.endY)\n    this.ctx.stroke()\n  }\n\n  drawStart = e => {\n    if (!this.props.isMouseDown) return\n\n    if (this.props.chunkIdx < this.props.linesArrayChunk.length - 1) {\n      this.props.clearFutureLineArray()\n      this.props.sliceLinesChunk(this.props.chunkIdx + 1)\n    }\n\n    const { x, y } = this.getMousePos(e)\n    this.x = x\n    this.y = y\n\n    // make sure we start painting, useful to draw simple dots\n    this.draw(e)\n  }\n\n  draw = e => {\n    if (!this.props.isMouseDown) return\n    // calculate the current x, y coords\n    const { x, y } = this.getMousePos(e)\n\n    // Offset by 1 to ensure drawing a dot on click\n    const newX = x + 1\n    const newY = y + 1\n\n    // create current line object\n    const line = {\n      color: this.props.canvasBrushColor,\n      size: this.props.canvasBrushSize,\n      startX: this.x,\n      startY: this.y,\n      endX: newX,\n      endY: newY\n    }\n\n    // actually draw the line\n    this.drawLine(line)\n\n    // push it to our array of lines\n    this.props.pushLineArray([line])\n\n    // set current x, y coords\n    this.x = newX\n    this.y = newY\n  }\n\n  render() {\n    return (\n      <div>\n        <canvas\n          className='inputCanvas'\n          width={this.props.canvasWidth}\n          height={this.props.canvasHeight}\n          style={{\n            display: 'block',\n            background: `url(${this.props.inputImageFile})`,\n            backgroundSize: '100% 100%',\n            touchAction: 'none',\n            width: '100%',\n            height: '100%',\n          }}\n          ref={canvas => {\n            if (canvas) {\n              this.canvas = canvas\n              this.props.setCanvas(canvas)\n              this.ctx = canvas.getContext('2d')\n            }\n          }}\n          onMouseDown={this.drawStart}\n          onClick={() => false}\n          onMouseEnter={this.drawStart}\n          onMouseMove={this.draw}\n          onTouchStart={this.drawStart}\n          onTouchMove={this.draw}\n        />\n      </div>\n    )\n  }\n}\n\nexport default sizeMe()(CanvasDraw)\n","import { connect } from 'react-redux'\nimport CanvasDraw from '../components/canvas'\nimport { sliceLinesChunk } from '../actions/action_unredo'\nimport {\n  updateCanvasDimensions,\n  updateBrushSize,\n  updateBrushColor,\n  setCanvas,\n  pushLineArray,\n  clearFutureLineArray\n} from '../actions/action_canvas'\n\nconst mapStateToProps = state => ({\n  canvasBrushSize: state.canvas.canvasBrushSize,\n  canvasBrushColor: state.canvas.canvasBrushColor,\n  canvas: state.canvas.canvas,\n  linesArray: state.canvas.linesArray,\n  canvasSize: state.main.canvasSize,\n  isMouseDown: state.unredo.isMouseDown,\n})\n\nexport default connect(mapStateToProps, {\n  updateCanvasDimensions,\n  updateBrushSize,\n  updateBrushColor,\n  setCanvas,\n  pushLineArray,\n  clearFutureLineArray,\n  sliceLinesChunk\n})(CanvasDraw)\n","import { Component } from 'react'\n\nclass Hotkey extends Component {\n  componentDidMount() {\n    if (!this.props.activeHotkeys.includes(this.props.name)) {\n      this.props.addActiveHotkey(this.props.name)\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeActiveHotkey(this.props.name)\n  }\n\n  render() {\n    return this.props.children || null\n  }\n}\n\nexport default Hotkey","import { connect } from 'react-redux'\nimport Kbevents from '../components/kb_events'\nimport {\n  addActiveHotkey,\n  removeActiveHotkey\n} from '../actions/action_kbevents'\n\nconst mapStateToProps = state => ({\n  activeHotkeys: state.kbevents.activeHotkeys,\n})\n\nexport default connect(mapStateToProps, {\n  addActiveHotkey,\n  removeActiveHotkey\n})(Kbevents)","import React, { Component } from 'react'\nimport { Button, Label } from 'semantic-ui-react'\nimport Slider from '@material-ui/lab/Slider'\nimport { withStyles } from '@material-ui/core/styles'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport Hotkey from '../containers/kb_events'\n\nconst styles = {\n  activated: {\n  },\n  jumped: {\n  },\n  thumb: {\n    backgroundColor: '#FF4081',\n    width: 15,\n    height: 15,\n    '&:hover': {\n      boxShadow: `0px 0px 0px 9px ${fade('#FF4081', .16)}`\n    },\n    '&$activated': {\n      boxShadow: `0px 0px 0px 18px ${fade('#FF4081', .16)}`\n    },\n    '&$jumped': {\n      boxShadow: `0px 0px 0px 18px ${fade('#FF4081', .16)}`\n    }\n  },\n  track: {\n    backgroundColor: '#FF4081',\n    height: 5\n  }\n}\n\nclass ToolbarInpainting extends Component {\n  onSliderChange = (e, v) => {\n    this.props.updateBrushSize(v)\n  }\n\n  render() {\n    const { classes } = this.props\n    return (\n      <div style={{ textAlign: 'right' }}>\n        <table width='100%'>\n          <tbody>\n            <tr>\n              <td width={100} style={{ textAlign: 'center' }}>\n                <b>Brush Size</b>\n              </td>\n              <td>\n                <div>\n                  <Slider\n                    classes={{\n                      activated: classes.activated,\n                      jumped: classes.jumped,\n                      thumb: classes.thumb,\n                      track: classes.track\n                    }}\n                    value={this.props.canvasBrushSize}\n                    min={1}\n                    max={20}\n                    step={1}\n                    onChange={this.onSliderChange}\n                  />\n                </div>\n              </td>\n              <td width={50}>\n                <Label color='pink'>{this.props.canvasBrushSize}</Label>\n              </td>\n            </tr>\n          </tbody>\n        </table><br />\n        <Hotkey name='performInpainting'>\n          <Button\n            color='violet'\n            content='Paint'\n            onClick={this.props.performInpainting}\n          />\n        </Hotkey>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(ToolbarInpainting)\n","import { connect } from 'react-redux'\nimport ToolbarInpainting from '../components/inpainting_toolbar'\nimport { performInpainting } from '../actions/action_inpainting'\nimport {\n  updateBrushSize\n} from '../actions/action_canvas'\n\nconst mapStateToProps = state => ({\n  canvasBrushSize: state.canvas.canvasBrushSize,\n})\n\nexport default connect(mapStateToProps, {\n  updateBrushSize,\n  performInpainting\n})(ToolbarInpainting)","import React, { Component } from 'react'\nimport ImageUploader from './uploader'\nimport CanvasDraw from '../containers/canvas'\nimport ToolbarInpainting from '../containers/inpainting_toolbar'\nimport Hotkey from '../containers/kb_events'\nimport {\n  Grid, Label, Segment, Icon, Dimmer, Loader,\n  Button, Tab, Responsive, Modal, Header\n} from 'semantic-ui-react'\n\nclass Main extends Component {\n  constructor(props) {\n    super(props)\n    this.child = React.createRef()\n    this.state = {\n      toggleIOimg: false\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.props.handleKeyDown)\n    document.addEventListener('keypress', this.props.handleKeyDown)\n    document.addEventListener('mouseup', this.props.handleMouseClick, true)\n    document.addEventListener('mousedown', this.props.handleMouseClick, true)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.props.handleKeyDown)\n    document.removeEventListener('keypress', this.props.handleKeyDown)\n    document.removeEventListener('mouseup', this.props.handleMouseClick, true)\n    document.removeEventListener('mousedown', this.props.handleMouseClick, true)\n  }\n\n  toggleBtn = () => {\n    this.setState(prevState => (\n      { toggleIOimg: !prevState.toggleIOimg }\n    ))\n  }\n\n  onSize = size => {\n    this.props.updateCanvasSize(size)\n  }\n\n  btn = (args, hiddenName, iconName) => (\n    <Button {...args}>\n      <Button.Content visible>\n        <Icon name={iconName} />\n      </Button.Content>\n      {hiddenName !== null ? <Button.Content hidden>{hiddenName}</Button.Content> : null}\n    </Button>\n  )\n\n  // Button generator for adjusting the width of the input column (and thereby also output column)\n  moveButton = (floatRight, resultWidth, direction, addSpace) => {\n    const btn = this.btn({\n      compact: true,\n      basic: true,\n      floated: floatRight === true ? 'right' : null,\n      onClick: e => this.props.updateInputColWidth(resultWidth)\n    }, null, 'angle double ' + direction)\n    return addSpace === true ? <p><br />{btn}</p> : btn\n  }\n\n  // Dynamic grid width and content adjustments\n  grid = (inlineView, view, width, label, color, floatPos) => (\n    <Grid.Column width={width} className='smoothColChange'>\n      <Segment raised>\n        <Label as='a' color={color} ribbon>\n          {label}\n        </Label>\n        {inlineView.map((obj, i) => (\n          <div key={i} style={{ display: 'inline-block', float: floatPos }}>{obj}</div>\n        ))}\n        {view.map((obj, i) => <div key={i}>{obj}</div>)}\n      </Segment>\n    </Grid.Column>\n  )\n\n  render() {\n    const { toggleIOimg } = this.state\n\n    // Dimmers and loaders\n    const myInputDimmer = (\n      <Dimmer active={this.props.inputProcessing}>\n        <Loader>Loading...</Loader>\n      </Dimmer>\n    )\n\n    const myOutputDimmer = (\n      <Dimmer active={this.props.outputProcessing}>\n        <Loader>Processing image...</Loader>\n      </Dimmer>\n    )\n\n    // Width controls\n    // ===================\n    const totalCols = this.props.constTotalCols\n    const expandedCol = this.props.constExpandedCols\n    const inputWidth = this.props.inputColWidth\n    const outputWidth = totalCols - inputWidth\n\n    // If not hidden, show hide button (i.e. show the other fully)\n    const hideInputBtn = inputWidth >= 8 ? this.moveButton(true, totalCols - expandedCol, 'left', false) : ''\n    const hideOutputBtn = outputWidth >= 8 ? this.moveButton(false, expandedCol, 'right', false) : ''\n\n    // Input view\n    // ==========\n    const inBtnDefaults = {\n      compact: true,\n      animated: 'vertical',\n      floated: 'right',\n      onMouseDown: e => e.preventDefault()\n    }\n\n    const undoBtn = <Hotkey name='undo'>\n      {this.btn({\n        color: 'pink',\n        disabled: this.props.chunkIdx === 0 ? true : false,\n        onClick: e => this.props.undo(),\n        ...inBtnDefaults\n      }, 'Undo', 'undo')}\n    </Hotkey>\n\n    const redoBtn = <Hotkey name='redo'>\n      {this.btn({\n        color: 'pink',\n        disabled: this.props.chunkIdx === this.props.linesArrayChunk.length - 1 ? true : false,\n        onClick: e => this.props.redo(),\n        ...inBtnDefaults\n      }, 'Redo', 'redo')}\n    </Hotkey>\n\n    const resetBtn = this.props.inputImageFile ?\n      <Hotkey name='showCloseModal'>\n        {this.btn({\n          color: 'red',\n          onClick: e => this.props.showCloseModal(true),\n          ...inBtnDefaults\n        }, 'Close', 'close')}\n      </Hotkey> : ''\n\n\n    const resetModal = showModal => (\n      <Modal open={showModal} onClose={() => this.props.showCloseModal(false)} trigger={resetBtn} closeIcon>\n        <Header icon='warning sign' content='What do you wish to do?' />\n        <Modal.Actions>\n          <Hotkey name='resetImage'>\n            <Button color='facebook' onClick={e => {\n              this.props.resetImage()\n              this.props.showCloseModal(false)\n            }}>\n              <Icon name='eraser' /> Reset the image\n            </Button>\n          </Hotkey>\n          <Hotkey name='pickNewImage'>\n            <Button color='google plus' onClick={e => {\n              this.props.pickNewImage()\n              this.props.showCloseModal(false)\n            }}>\n              <Icon name='image' /> Pick a new image\n            </Button>\n          </Hotkey>\n        </Modal.Actions>\n      </Modal>\n    )\n\n    const panes = [{\n      menuItem: { key: 'inpaint', icon: 'paint brush' },\n      render: () => (\n        <Tab.Pane><ToolbarInpainting {...this.props} canvas={this.child} /></Tab.Pane>\n      )\n    }]\n\n    const canvasScreen = (\n      <div>\n        <div className='inputImage'>\n          {myInputDimmer}\n          <CanvasDraw {...this.props} ref={this.child} onSize={this.onSize} />\n        </div>\n        <Tab panes={panes} />\n        <br />\n      </div>\n    )\n\n    const uploaderScreen = (\n      <ImageUploader loader={myInputDimmer} {...this.props} />\n    )\n\n    const inputView = showModal => {\n      const defaults = [inputWidth, 'Input', 'violet', 'right']\n\n      // If hidden, then show a button to expand to half screen size\n      if (outputWidth === expandedCol) {\n        const btn = this.moveButton(false, 8, 'right', true)\n        return this.grid([], [btn], ...defaults)\n      }\n      const canvas = this.grid([resetModal(showModal), redoBtn, undoBtn, hideInputBtn], [canvasScreen], ...defaults)\n      const uploader = this.grid([hideInputBtn], [uploaderScreen], ...defaults)\n      return this.props.inputImageFile ? canvas : uploader\n    }\n\n    // Output view\n    // ===========\n    const outBtnDefaults = {\n      compact: true,\n      animated: 'vertical',\n      onMouseDown: e => e.preventDefault()\n    }\n\n    const toggleBtn = (\n      <Button\n        color={toggleIOimg ? 'purple' : 'violet'}\n        onClick={e => this.toggleBtn()}\n        compact>\n        {toggleIOimg ? 'Input' : 'Output'}\n      </Button>\n    )\n\n    const downloadBtn = <Hotkey name='downloadOutputImage'>\n      {this.btn({\n        color: 'pink',\n        onClick: e => this.props.downloadOutputImage(),\n        style: { minWidth: '6em' },\n        ...outBtnDefaults\n      }, 'Download', 'download')}\n    </Hotkey>\n\n    const resultScreen = (\n      <div className='outputImage'>\n        <Segment basic className='resultArea'>\n          {myOutputDimmer}\n          <img\n            src={toggleIOimg ? this.props.inputImageFile : this.props.outputImageFile}\n            alt=''\n            className='resultImage'\n          />\n        </Segment>\n      </div>\n    )\n\n    const waitScreen = (\n      <div className='outputImage'>\n        <Segment className='resultArea'>\n          {myOutputDimmer}\n          <label htmlFor='file' className='inputLabel'>\n            <br />\n            <Icon name='hourglass half' size='huge' />\n            Waiting for output...\n          <br /><br />\n          </label>\n        </Segment>\n      </div>\n    )\n\n    const outputView = () => {\n      const defaults = [outputWidth, 'Output', 'violet', 'right']\n\n      // If hidden, then show a button to expand to half screen size\n      if (inputWidth === expandedCol) {\n        const btn = this.moveButton(false, 8, 'left', true)\n        return this.grid([], [btn], ...defaults)\n      }\n      const result = this.grid([hideOutputBtn, downloadBtn, toggleBtn], [resultScreen], ...defaults)\n      const wait = this.grid([hideOutputBtn], [waitScreen], ...defaults)\n      return this.props.outputImageFile ? result : wait\n    }\n\n    return (\n      <div style={{ marginTop: '15px' }}>\n        <Responsive>\n          <Grid stackable columns={2}>\n            {inputView(this.props.showModal)}\n            {outputView()}\n          </Grid>\n        </Responsive>\n      </div>\n    )\n  }\n}\n\nexport default Main","import { connect } from 'react-redux'\nimport Main from '../components/main'\nimport { undo, redo, handleMouseClick } from '../actions/action_unredo'\nimport { handleKeyDown } from '../actions/action_kbevents'\nimport {\n  saveInputFile,\n  setInputProcessing,\n  updateCanvasSize,\n  updateInputColWidth,\n  resetImage,\n  pickNewImage,\n  downloadOutputImage,\n  showCloseModal\n} from '../actions'\n\nconst mapStateToProps = state => ({\n  canvasWidth: state.canvas.canvasWidth,\n  canvasHeight: state.canvas.canvasHeight,\n  inputProcessing: state.main.inputProcessing,\n  outputProcessing: state.main.outputProcessing,\n  inputImageFile: state.main.inputImageFile,\n  inputImageSrc: state.main.inputImageSrc,\n  outputImageFile: state.main.outputImageFile,\n  outputImageSrc: state.main.outputImageSrc,\n  inputColWidth: state.main.inputColWidth,\n  constTotalCols: state.main.constTotalCols,\n  constExpandedCols: state.main.constExpandedCols,\n  showModal: state.main.showModal,\n  chunkIdx: state.unredo.chunkIdx,\n  linesArrayChunk: state.unredo.linesArrayChunk,\n})\n\nexport default connect(mapStateToProps, {\n  saveInputFile,\n  setInputProcessing,\n  updateCanvasSize,\n  updateInputColWidth,\n  resetImage,\n  pickNewImage,\n  downloadOutputImage,\n  showCloseModal,\n  undo,\n  redo,\n  handleMouseClick,\n  handleKeyDown\n})(Main)","import React, { Component } from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport Main from './containers/main'\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n      <div className=\"App\">\n        <Main {...this.props} />\n      </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}